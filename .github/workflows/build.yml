name: Build

on:
  push:
    tags: ['*']
    paths-ignore:
      - README.md
  pull_request:
    branches: ["main"]
    paths-ignore:
      - README.md

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_PLATFORM: linux/amd64,linux/arm64

jobs:
  build-container:
    permissions:
      contents: read # for actions/checkout to fetch code
      packages: write # for docker/build-push-action to store image to package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Prepare
        id: prepare
        run: |
          IMAGE_FULL_NAME="${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}"
          VERSION=${GITHUB_REF#refs/*/}
          if [ ${{ github.event_name == 'pull_request' }} ]; then
            VERSION=test
          fi
          TAGS="${IMAGE_FULL_NAME}:${VERSION}"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAGS="${TAGS},${IMAGE_FULL_NAME}:latest"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Build
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: "{{defaultContext}}:.devcontainer"
          push: false
          tags: ${{ env.IMAGE_NAME }}:test
          provenance: false
          load: true

      - name: Test
        run: |
          docker image history "${{ env.IMAGE_NAME }}:test"
          cd test
          ./run_tests.sh "${{ env.IMAGE_NAME }}:test"
          cd ..

      - name: Multi-arch build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: "{{defaultContext}}:.devcontainer"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prepare.outputs.tags }}
          platforms: ${{ env.IMAGE_PLATFORM }}
          provenance: false
  
